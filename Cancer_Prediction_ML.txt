
import pandas as pd
import matplotlib.pyplot as plt
%matplotlib inline 
import cufflinks as cf
import plotly
from plotly.offline import init_notebook_mode,iplot,plot
init_notebook_mode(connected=True)
cf.go_offline()


df = pd.read_csv('Cancer Dataset.csv')

df.head()

df.info()


df.drop(['Patient Id'],axis = 1,inplace=True)

df.head()

df['Level']


df['Level'].replace('Medium','High',inplace=True)



df['Level'].replace('High','1',inplace=True)
df['Level'].replace('Low','0',inplace=True)


df.head()

df['Level'] = pd.to_numeric(df['Level'])


df.isnull()

df.isnull().any()

df.isnull().sum()

import seaborn as sns
sns.heatmap(df.isnull())


plt.figure(figsize=(10,5))
sns.countplot(x='Smoking',data=df)

plt.figure(figsize=(10,5))
sns.countplot(x='ChestPain',data = df)

plt.figure(figsize=(10,5))
sns.boxplot(x='ChestPain',y='Age',data = df)


plt.figure(figsize=(10,5))
sns.boxplot(x='Smoking',y='Age',data = df)

sorted_smokers = df.groupby('Age')['Smoking'].count().to_frame()

sorted_smokers.style.background_gradient(cmap = 'Reds')

df.style.background_gradient(cmap = 'Reds')

label = df.Age.sort_values().unique()       
target = sorted_smokers.Smoking

print(label)
print(target)


import plotly.graph_objects as go

fig = go.Figure()
fig.add_trace(go.Bar(x=label,y=target))
fig.update_layout(title = 'Smokers per age',xaxis=dict(title='Age'),yaxis=dict(title='Smokers'))
fig.show()

fig = go.Figure()
fig.add_trace(go.Scatter(x=label,y=target,mode='markers+lines'))
fig.update_layout(title = 'Smokers per age',xaxis=dict(title='Age'),yaxis=dict(title='Smokers'))
fig.show()


from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.metrics import log_loss, f1_score
from sklearn.model_selection import cross_val_score
import numpy as np 
acc_dict = {}
# create the data
X = df.drop('Level',axis = 1)
y = df['Level']
X_train, X_test, y_train, y_test = train_test_split(X,y)